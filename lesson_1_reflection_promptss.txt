How did viewing a diff between two versions of a file help you see the bug that
was introduced?

  

   I needn't compare manually the whole code line by line to find difference, because it can be automatically and fast.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

  
 
  I can come back anytime to each diff I've made and find problem quickly.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

 
  
   Manually choosing is better for programmer  because you can separate and save your diffs logically and have clear structure of your commits on project.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

  

  Because git is more flexible system, which allow saving multiplefiles that are connected to each other

How can you use the commands git log and git diff to view the history of files?

   
  
  You should use git log if you want to see list of commits that was done. And if you need to compare two commits and find the difference between them, you should use git diff id1 id2.

How might using version control make you more confident to make changes that
could break something?

  

 It makes me more confident because I know that anytime I can return to previous changes.
  
Now that you have your workspace set up, what do you want to try using Git for?

  
  Fill in your answer here
